{"version":3,"sources":["actions.js","components/AddForm.js","components/CharacterList.js","components/App.js","reducers.js","index.js"],"names":["receiveDataSuccess","characterArray","type","AddForm","store","getState","form","name","age","onSubmit","e","preventDefault","dispatch","axios","post","then","response","data","catch","err","console","error","Error","handleSubmit","value","onChange","changeName","target","changeAge","CharacterList","characters","isFetching","onClick","get","_characterArray","map","character","key","_id","id","put","method","url","App","this","props","Component","initialState","rootReducer","combineReducers","state","action","createStore","render","ReactDOM","document","getElementById","subscribe"],"mappings":"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","file":"static/js/main.2c7913ad.chunk.js","sourcesContent":["export const CHANGE_NAME = 'CHANGE_NAME'\nexport const CHANGE_AGE = 'CHANGE_AGE'\nexport const INITIALIZE_FORM = 'INITIALIZE_FORM'\nexport const REQUEST_DATA = 'REQUEST_DATA'\nexport const RECEIVE_DATA_SUCCESS = 'RECEIVE_DATA_SUCCESS'\nexport const RECEIVE_DATA_FAILED = 'RECEIVE_DATA_FAILED'\n\n\nexport const changeName = name => ({\n    type: CHANGE_NAME,\n    name,\n})\n\nexport const changeAge = age => ({\n    type: CHANGE_AGE,\n    age,\n})\n\nexport const initializeForm = () => ({\n    type: INITIALIZE_FORM,\n})\n\nexport const requestData = () => ({\n    type: REQUEST_DATA\n})\n\nexport const receiveDataSuccess = characterArray => ({\n    type: RECEIVE_DATA_SUCCESS,\n    characterArray\n})\n\nexport const receiveDataFailed = () => ({\n    type: RECEIVE_DATA_FAILED\n})","import React from 'react';\nimport axios from 'axios';\nimport {\n     changeName, changeAge, initializeForm,\n     requestData, receiveDataSuccess, receiveDataFailed\n    } from '../actions';\n\nconst AddForm = ({ store }) => {\n    const { name, age } = store.getState().form // storeからFormの内容を取得\n\n    const handleSubmit = e => {\n        e.preventDefault()\n\n        store.dispatch(requestData())\n    axios.post('/api/characters', {\n        name,\n        age,\n    })\n    .then(response => {\n        store.dispatch(initializeForm())\n        const characterArray = response.data\n        store.dispatch(receiveDataSuccess(characterArray))\n    })\n    .catch(err => {\n        console.error(new Error(err))\n        store.dispatch(receiveDataFailed())\n    })\n}\n\n    return (\n        <div>\n            <form onSubmit={e => handleSubmit(e)}>\n                <label>\n                    名前：\n                    <input value={name} onChange={e => store.dispatch(changeName(e.target.value))} />\n                </label>\n                <label>\n                    年齢：\n                    <input value={age} onChange={e => store.dispatch(changeAge(e.target.value))} />\n                </label>\n                <button type=\"submit\">submit</button>\n            </form>\n        </div>\n    )\n}\n\nexport default AddForm","import React from 'react';\nimport { requestData, receiveDataSuccess, receiveDataFailed } from \"../actions\";\nimport axios from 'axios';\n\nconst CharacterList = ({ store }) => {\n    const { isFetching, characterArray } = store.getState().characters\n\n    const handleFetchData = () => {\n        store.dispatch(requestData())\n        axios.get('/api/characters')\n        .then(response => {\n            const _characterArray = response.data\n            store.dispatch(receiveDataSuccess(_characterArray))\n        })\n        .catch(err => {\n            console.error(new Error(err))\n            store.dispatch(receiveDataFailed())\n        })\n    }\n\n    const handleUpdateCharacter = id => {\n        store.dispatch(requestData())\n        axios.put('/api/characters', {\n            id\n        })\n        .then(response => {\n            const _characterArray = response.data\n            store.dispatch(receiveDataSuccess(_characterArray))\n        })\n    }\n\n    const handleDeleteCharacter = id => {\n        store.dispatch(requestData())\n        // axios.delete('/api/characters', { id })とやりたいができないので\n        axios({\n            method: 'delete',\n            url: '/api/characters',\n            data: {\n                id\n            }\n        })\n        .then(response => {\n            const _characterArray = response.data\n            store.dispatch(receiveDataSuccess(_characterArray))\n        })\n        .catch(err => {\n            console.error(new Error(err))\n            store.dispatch(receiveDataFailed())\n        })\n    }\n\n    return (\n        <div>\n            {\n                isFetching\n                ? <h2>Now Loading...</h2>\n                : <div>\n                    <button onClick={() => handleFetchData()}>fetch data</button>\n                    <ul>\n                        {characterArray.map(character => (\n                            <li key={character._id}>\n                                {`${character.name}(${character.age})`}\n                                <button onClick={() => handleUpdateCharacter(character._id)}>+1</button>\n                                <button onClick={() => handleDeleteCharacter(character._id)}>delete</button>\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n            }\n        </div>\n    )\n}\n\nexport default CharacterList","import React, { Component } from 'react'\nimport AddForm from './AddForm'\nimport CharacterList from './CharacterList'\n\nclass App extends Component {\n  render(){\n      return (\n        <div>\n          <AddForm store={this.props.store} />\n          <CharacterList store={this.props.store} />\n        </div>\n      )\n    }\n  }\n\nexport default App","import { combineReducers } from 'redux'\nimport {\n    CHANGE_NAME, CHANGE_AGE, INITIALIZE_FORM,\n    REQUEST_DATA, RECEIVE_DATA_SUCCESS, RECEIVE_DATA_FAILED\n    } from './actions'\n\nconst initialState = {\n    form: { // 今回はControlledとして扱う\n        name: '',\n        age: ''\n    },\n    characters: { // isFetching === trueのときにLoading...という風に出したい。アプリが現状把握するために必要\n        isFetching: false,\n        characterArray: []\n    }\n}\n\nconst formReducer = (state = initialState.form, action) => {\n    switch (action.type) {\n        case CHANGE_NAME:\n            return {\n                ...state,\n                name: action.name\n            }\n        case CHANGE_AGE:\n            return {\n                ...state,\n                age: action.age\n            }\n        case INITIALIZE_FORM:\n            return initialState.form\n        default:\n            return state\n    }\n}\n\nconst charactersReducer = (state = initialState.characters, action) => {\n    switch (action.type) {\n        case REQUEST_DATA:\n            return {\n                ...state,\n                isFetching: true\n            }\n        case RECEIVE_DATA_SUCCESS:\n            return {\n                ...state,\n                isFetching: false,\n                characterArray: action.characterArray\n            }\n        case RECEIVE_DATA_FAILED:\n            return {\n                ...state,\n                isFetching: false\n            }\n        default:\n            return state\n    }\n}\n\nconst rootReducer = combineReducers({\n    form: formReducer,\n    characters: charactersReducer\n})\n\nexport default rootReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport App from './components/App';\nimport rootReducer from './reducers';\n\nconst store = createStore(rootReducer)\n\nconst render = () => {\n    ReactDOM.render(\n        <App store={store} />,\n        document.getElementById('root')\n    )\n}\n\nstore.subscribe(() => {\n    render()\n})\nrender()"],"sourceRoot":""}